# Generated by Django 5.1.6 on 2025-02-08 21:52

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Company Name')),
                ('owner_name', models.CharField(max_length=100, verbose_name='Owner Name')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Contact Phone')),
                ('phone_number_id', models.CharField(max_length=50, verbose_name='WhatsApp Business ID')),
                ('whatsapp_access_token', models.CharField(max_length=255, verbose_name='WhatsApp Access Token')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Physical Address')),
                ('nif', models.CharField(max_length=20, verbose_name='Tax Identification Number (NIF)')),
                ('timezone', models.CharField(choices=[('Europe/London', '🇬🇧 Reino Unido - Londres'), ('Europe/Madrid', '🇪🇸 España - Madrid'), ('Europe/Paris', '🇫🇷 Francia - París'), ('Europe/Berlin', '🇩🇪 Alemania - Berlín'), ('Europe/Rome', '🇮🇹 Italia - Roma'), ('Europe/Amsterdam', '🇳🇱 Países Bajos - Ámsterdam'), ('Europe/Brussels', '🇧🇪 Bélgica - Bruselas'), ('Europe/Lisbon', '🇵🇹 Portugal - Lisboa'), ('Europe/Zurich', '🇨🇭 Suiza - Zúrich'), ('Europe/Vienna', '🇦🇹 Austria - Viena'), ('Europe/Stockholm', '🇸🇪 Suecia - Estocolmo'), ('Europe/Copenhagen', '🇩🇰 Dinamarca - Copenhague'), ('Europe/Oslo', '🇳🇴 Noruega - Oslo'), ('Europe/Helsinki', '🇫🇮 Finlandia - Helsinki'), ('Europe/Athens', '🇬🇷 Grecia - Atenas'), ('Europe/Dublin', '🇮🇪 Irlanda - Dublín'), ('Europe/Prague', '🇨🇿 República Checa - Praga'), ('Europe/Warsaw', '🇵🇱 Polonia - Varsovia'), ('Europe/Budapest', '🇭🇺 Hungría - Budapest'), ('Europe/Sofia', '🇧🇬 Bulgaria - Sofía'), ('Europe/Bucharest', '🇷🇴 Rumanía - Bucarest'), ('Europe/Istanbul', '🇹🇷 Turquía - Estambul'), ('Europe/Moscow', '🇷🇺 Rusia - Moscú'), ('Europe/Kiev', '🇺🇦 Ucrania - Kiev')], default='Europe/Madrid', max_length=50, verbose_name='Time Zone')),
                ('currency', models.CharField(choices=[('EUR', '💶 Euro (€)'), ('USD', '💵 Dólar estadounidense ($)'), ('GBP', '💷 Libra esterlina (£)'), ('CHF', '🇨🇭 Franco suizo (CHF)'), ('PLN', '🇵🇱 Złoty polaco (zł)'), ('SEK', '🇸🇪 Corona sueca (kr)'), ('NOK', '🇳🇴 Corona noruega (kr)'), ('DKK', '🇩🇰 Corona danesa (kr)'), ('RUB', '🇷🇺 Rublo ruso (₽)'), ('TRY', '🇹🇷 Lira turca (₺)'), ('RON', '🇷🇴 Leu rumano (lei)'), ('CZK', '🇨🇿 Corona checa (Kč)'), ('HUF', '🇭🇺 Forinto húngaro (Ft)'), ('UAH', '🇺🇦 Grivna ucraniana (₴)'), ('CAD', '🇨🇦 Dólar canadiense (C$)'), ('AUD', '🇦🇺 Dólar australiano (A$)'), ('MXN', '🇲🇽 Peso mexicano (MX$)'), ('BRL', '🇧🇷 Real brasileño (R$)'), ('ARS', '🇦🇷 Peso argentino (AR$)'), ('CLP', '🇨🇱 Peso chileno (CLP$)')], default='EUR', max_length=10, verbose_name='Currency')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
            ],
        ),
        migrations.CreateModel(
            name='TenantPrompt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Unique ID')),
                ('name', models.CharField(default='Main Prompt', max_length=100, verbose_name='Prompt Name')),
                ('content', models.TextField(verbose_name='Prompt Content')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prompts', to='tenants.tenant', verbose_name='Associated Tenant')),
            ],
        ),
    ]
