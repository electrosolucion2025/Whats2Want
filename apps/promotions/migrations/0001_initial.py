# Generated by Django 5.1.6 on 2025-02-12 16:54

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('menu', '0003_category_print_zones'),
        ('orders', '0001_initial'),
        ('tenants', '0003_alter_tenant_email'),
        ('whatsapp', '0003_alter_whatsappcontact_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text="Promo code (e.g., 'PROMOCAFE')", max_length=50, unique=True, verbose_name='Promo Code')),
                ('description', models.TextField(help_text='Promotion description', verbose_name='Description')),
                ('promo_type', models.CharField(choices=[('percentage', 'Percentage Discount'), ('fixed_amount', 'Fixed Amount Discount'), ('free_product', 'Free Product')], max_length=20, verbose_name='Promotion Type')),
                ('discount_value', models.DecimalField(blank=True, decimal_places=2, help_text="If it's a discount (percentage or fixed), this is the value", max_digits=10, null=True, verbose_name='Discount Value')),
                ('min_order_value', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum order value required to apply the promotion', max_digits=10, null=True, verbose_name='Minimum Order Value')),
                ('start_date', models.DateTimeField(help_text='Promotion start date', verbose_name='Start Date')),
                ('end_date', models.DateTimeField(help_text='Promotion end date', verbose_name='End Date')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the promotion is active', verbose_name='Is Active')),
                ('max_redemptions_per_user', models.IntegerField(blank=True, help_text="Limit of uses per user (e.g., 1 for 'first purchase only')", null=True, verbose_name='Max Redemptions Per User')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('free_product', models.ForeignKey(blank=True, help_text='If the promo gives a free product, specify which one', null=True, on_delete=django.db.models.deletion.SET_NULL, to='menu.product', verbose_name='Free Product')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotions', to='tenants.tenant', verbose_name='Tenant')),
            ],
            options={
                'verbose_name': 'Promotion',
                'verbose_name_plural': 'Promotions',
            },
        ),
        migrations.CreateModel(
            name='PromotionRedemption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('redeemed_at', models.DateTimeField(auto_now_add=True, verbose_name='Redeemed At')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='applied_promotion', to='orders.order', verbose_name='Order')),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redemptions', to='promotions.promotion', verbose_name='Promotion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='used_promotions', to='whatsapp.whatsappcontact', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Promotion Redemption',
                'verbose_name_plural': 'Promotion Redemptions',
                'unique_together': {('promotion', 'user')},
            },
        ),
    ]
